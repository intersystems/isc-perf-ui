{
  "components":{
    "responses":{
      "403":{
        "description":"Forbidden: Authentication Failure"
      }
    },
    "schemas":{
      "JSONError":{
        "description":"An error message / multiple error messages",
        "example":{
          "errors":[
          ]
        },
        "properties":{
          "errors":{
            "description":"An array containing information about each of the errors that occurred",
            "items":{
              "properties":{
                "code":{
                  "description":"The error code",
                  "type":"integer"
                },
                "domain":{
                  "type":"string"
                },
                "error":{
                  "description":"A string-format representation of the error",
                  "type":"string"
                },
                "errors":{
                  "items":{
                    "$ref":"#/components/schemas/JSONError"
                  },
                  "type":"array"
                },
                "id":{
                  "type":"string"
                },
                "params":{
                  "items":{
                    "type":"string"
                  },
                  "type":"array"
                }
              }
            },
            "type":"array"
          },
          "summary":{
            "description":"A description of the error(s) that occurred",
            "type":"string"
          }
        },
        "type":"object"
      },
      "TextError":{
        "description":"A string-format representation of the error that occurred",
        "type":"string"
      },
      "coverage-config_input":{
        "properties":{
          "CoverageClasses":{
            "type":"string"
          },
          "CoverageLevel":{
            "type":"number"
          },
          "CoverageRoutines":{
            "type":"string"
          },
          "Pidlist":{
            "type":"string"
          },
          "Timing":{
            "type":"number"
          },
          "UnitTestRoot":{
            "type":"string"
          }
        },
        "type":"object",
        "writeOnly":true
      },
      "coverage-result_output":{
        "properties":{
          "_id":{
            "type":"string"
          },
          "code":{
            "type":"string"
          },
          "coloredLine":{
            "type":"string"
          },
          "line":{
            "type":"string"
          },
          "metrics":{
            "type":"number"
          },
          "routine":{
            "type":"string"
          }
        },
        "readOnly":true,
        "required":[
          "_id"
        ],
        "type":"object"
      },
      "coverage-results_output":{
        "properties":{
          "_id":{
            "type":"string"
          },
          "results":{
            "items":{
              "$ref":"#/components/schemas/coverage-result_output"
            },
            "type":"array"
          }
        },
        "readOnly":true,
        "required":[
          "_id"
        ],
        "type":"object"
      },
      "coverage-routine-path_output":{
        "properties":{
          "_id":{
            "type":"string"
          },
          "routine":{
            "type":"string"
          },
          "testpath":{
            "type":"string"
          }
        },
        "readOnly":true,
        "required":[
          "_id"
        ],
        "type":"object"
      },
      "coverage-routine-paths_output":{
        "properties":{
          "_id":{
            "type":"string"
          },
          "covpaths":{
            "items":{
              "$ref":"#/components/schemas/coverage-routine-path_output"
            },
            "type":"array"
          }
        },
        "readOnly":true,
        "required":[
          "_id"
        ],
        "type":"object"
      },
      "coverage-status_output":{
        "properties":{
          "_id":{
            "type":"string"
          },
          "status":{
            "example":"Success",
            "type":"string"
          }
        },
        "readOnly":true,
        "required":[
          "_id",
          "status"
        ],
        "type":"object"
      },
      "line-by-line-monitor-config_input":{
        "properties":{
          "metrics":{
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "processes":{
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "routines":{
            "items":{
              "type":"string"
            },
            "type":"array"
          }
        },
        "type":"object",
        "writeOnly":true
      },
      "line-by-line-monitor-metrics_output":{
        "properties":{
          "_id":{
            "type":"string"
          },
          "metrics":{
            "items":{
              "type":"string"
            },
            "type":"array"
          }
        },
        "readOnly":true,
        "required":[
          "_id",
          "metrics"
        ],
        "type":"object"
      },
      "line-by-line-monitor-result_output":{
        "properties":{
          "_id":{
            "type":"string"
          },
          "code":{
            "type":"string"
          },
          "coloredLine":{
            "type":"string"
          },
          "line":{
            "type":"string"
          },
          "metrics":{
            "type":"number"
          },
          "routine":{
            "type":"string"
          }
        },
        "readOnly":true,
        "required":[
          "_id"
        ],
        "type":"object"
      },
      "line-by-line-monitor-results_output":{
        "properties":{
          "_id":{
            "type":"string"
          },
          "results":{
            "items":{
              "$ref":"#/components/schemas/line-by-line-monitor-result_output"
            },
            "type":"array"
          }
        },
        "readOnly":true,
        "required":[
          "_id"
        ],
        "type":"object"
      },
      "line-by-line-monitor-status_output":{
        "properties":{
          "_id":{
            "type":"string"
          },
          "metrics":{
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "routines":{
            "items":{
              "type":"string"
            },
            "type":"array"
          },
          "status":{
            "example":"stopped",
            "type":"string"
          }
        },
        "readOnly":true,
        "required":[
          "_id",
          "metrics",
          "routines",
          "status"
        ],
        "type":"object"
      },
      "platform-user_output":{
        "properties":{
          "Username":{
            "example":"SuperUser",
            "type":"string"
          },
          "_id":{
            "type":"string"
          }
        },
        "readOnly":true,
        "required":[
          "_id"
        ],
        "type":"object"
      },
      "string_input":{
        "example":"",
        "type":"string",
        "writeOnly":true
      }
    }
  },
  "info":{
    "description":"***This is an initial development build!*** (see [https://semver.org/](https://semver.org/))\n",
    "title":"-csp-user-monlbl-viewer-api",
    "version":"0.1.0"
  },
  "openapi":"3.0.3",
  "paths":{
    "/auth/logout":{
      "post":{
        "description":"Log out the current user",
        "responses":{
          "200":{
            "description":"A successful response"
          }
        }
      }
    },
    "/auth/status":{
      "get":{
        "description":"Get information about the current user",
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/platform-user_output"
                }
              }
            },
            "description":"A representation of the current user"
          },
          "204":{
            "description":"No Content: No information was found on the current user"
          }
        }
      }
    },
    "/build-documentation":{
      "get":{
        "description":"Get information on the current REST API documentation build",
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "description":"Information on the status of a build",
                  "properties":{
                    "buildFinishedTime":{
                      "description":"When the build finished (Unix time), 0 = not-yet-determined",
                      "type":"integer"
                    },
                    "buildInProgress":{
                      "description":"Whether or not the build is currently in-progress",
                      "type":"boolean"
                    },
                    "buildParameters":{
                      "properties":{
                        "debug":{
                          "description":"The build's debug parameter",
                          "type":"integer"
                        },
                        "internal":{
                          "description":"The build's internal parameter",
                          "type":"integer"
                        },
                        "userContext":{
                          "properties":{
                            "_id":{
                              "description":"The ID of the UserContext() that triggered this build (or the empty string if no such context exists)",
                              "type":"string"
                            }
                          },
                          "type":"object"
                        }
                      },
                      "type":"object"
                    },
                    "buildProgress":{
                      "properties":{
                        "OpenAPI":{
                          "description":"The current stage of the OpenAPI build process",
                          "type":"string"
                        },
                        "buildStage":{
                          "description":"The current stage of the over-all build process (monotonically increasing for a given build)",
                          "type":"integer"
                        }
                      },
                      "type":"object"
                    },
                    "buildStartedTime":{
                      "description":"When the build was started (Unix time)",
                      "type":"integer"
                    }
                  },
                  "type":"object"
                }
              }
            },
            "description":"The status of either the build that is currently in-progress, or the last build if no build is currently in-progress"
          },
          "403":{
            "$ref":"#/components/responses/403"
          }
        }
      },
      "post":{
        "description":"Trigger a (re)build of REST API documentation",
        "parameters":[
          {
            "description":"The debug level to build documentation with (defaults to 0 if not specified)",
            "in":"query",
            "name":"debug",
            "schema":{
              "type":"integer"
            }
          },
          {
            "description":"Whether or not documentation should be built for readers with source code access (defaults to 0=false if not specified)",
            "in":"query",
            "name":"internal",
            "schema":{
              "type":"integer"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "example":{
                    "statusUrl":"/build-documentation",
                    "statusMethod":"GET",
                    "buildStarted":true
                  },
                  "properties":{
                    "buildStarted":{
                      "description":"Whether or not the requested build was started successfully",
                      "type":"boolean"
                    },
                    "statusMethod":{
                      "description":"HTTP Method to use in conjunction with statusUrl",
                      "type":"string"
                    },
                    "statusUrl":{
                      "description":"URL to view the status of the started build",
                      "type":"string"
                    }
                  },
                  "type":"object"
                }
              }
            },
            "description":"Information about the started build"
          },
          "403":{
            "$ref":"#/components/responses/403"
          },
          "423":{
            "content":{
              "application/json":{
                "schema":{
                  "example":{
                    "statusUrl":"/build-documentation",
                    "statusMethod":"GET",
                    "buildStarted":true
                  },
                  "properties":{
                    "buildStarted":{
                      "description":"Whether or not the requested build was started successfully",
                      "type":"boolean"
                    },
                    "statusMethod":{
                      "description":"HTTP Method to use in conjunction with statusUrl",
                      "type":"string"
                    },
                    "statusUrl":{
                      "description":"URL to view the status of the started build",
                      "type":"string"
                    }
                  },
                  "type":"object"
                }
              }
            },
            "description":"Locked: Another build is currently in-progress, try again later"
          }
        }
      }
    },
    "/coverage/$results":{
      "get":{
        "description":"Performs the results action.",
        "parameters":[
          {
            "in":"query",
            "name":"routine",
            "required":false,
            "schema":{
              "$ref":"#/components/schemas/string_input"
            }
          },
          {
            "in":"query",
            "name":"testpath",
            "required":false,
            "schema":{
              "$ref":"#/components/schemas/string_input"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/coverage-results_output"
                }
              }
            },
            "description":"A successful response"
          },
          "403":{
            "$ref":"#/components/responses/403"
          },
          "406":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: The requested mediatype is not compatible with any supported response mediatypes."
          },
          "415":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: Mediatype is not compatible with any supported request mediatypes."
          }
        },
        "tags":[
          "coverage"
        ]
      }
    },
    "/coverage/$routinepaths":{
      "get":{
        "description":"Performs the routinepaths action.",
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/coverage-routine-paths_output"
                }
              }
            },
            "description":"A successful response"
          },
          "403":{
            "$ref":"#/components/responses/403"
          },
          "406":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: The requested mediatype is not compatible with any supported response mediatypes."
          },
          "415":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: Mediatype is not compatible with any supported request mediatypes."
          }
        },
        "tags":[
          "coverage"
        ]
      }
    },
    "/coverage/$start":{
      "post":{
        "description":"Performs the start action.",
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{
                "$ref":"#/components/schemas/coverage-config_input"
              }
            }
          },
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/coverage-status_output"
                }
              }
            },
            "description":"A successful response"
          },
          "403":{
            "$ref":"#/components/responses/403"
          },
          "406":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: The requested mediatype is not compatible with any supported response mediatypes."
          },
          "415":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: Mediatype is not compatible with any supported request mediatypes."
          }
        },
        "tags":[
          "coverage"
        ]
      }
    },
    "/monitor/$clear-counters":{
      "post":{
        "description":"Performs the clear-counters action.",
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/line-by-line-monitor-status_output"
                }
              }
            },
            "description":"A successful response"
          },
          "403":{
            "$ref":"#/components/responses/403"
          },
          "406":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: The requested mediatype is not compatible with any supported response mediatypes."
          },
          "415":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: Mediatype is not compatible with any supported request mediatypes."
          }
        },
        "tags":[
          "monitor"
        ]
      }
    },
    "/monitor/$list-metrics":{
      "get":{
        "description":"Performs the list-metrics action.",
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/line-by-line-monitor-metrics_output"
                }
              }
            },
            "description":"A successful response"
          },
          "403":{
            "$ref":"#/components/responses/403"
          },
          "406":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: The requested mediatype is not compatible with any supported response mediatypes."
          },
          "415":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: Mediatype is not compatible with any supported request mediatypes."
          }
        },
        "tags":[
          "monitor"
        ]
      }
    },
    "/monitor/$pause":{
      "post":{
        "description":"Performs the pause action.",
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/line-by-line-monitor-status_output"
                }
              }
            },
            "description":"A successful response"
          },
          "403":{
            "$ref":"#/components/responses/403"
          },
          "406":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: The requested mediatype is not compatible with any supported response mediatypes."
          },
          "415":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: Mediatype is not compatible with any supported request mediatypes."
          }
        },
        "tags":[
          "monitor"
        ]
      }
    },
    "/monitor/$results":{
      "get":{
        "description":"Performs the results action.",
        "parameters":[
          {
            "in":"query",
            "name":"routine",
            "required":false,
            "schema":{
              "$ref":"#/components/schemas/string_input"
            }
          }
        ],
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/line-by-line-monitor-results_output"
                }
              }
            },
            "description":"A successful response"
          },
          "403":{
            "$ref":"#/components/responses/403"
          },
          "406":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: The requested mediatype is not compatible with any supported response mediatypes."
          },
          "415":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: Mediatype is not compatible with any supported request mediatypes."
          }
        },
        "tags":[
          "monitor"
        ]
      }
    },
    "/monitor/$resume":{
      "post":{
        "description":"Performs the resume action.",
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/line-by-line-monitor-status_output"
                }
              }
            },
            "description":"A successful response"
          },
          "403":{
            "$ref":"#/components/responses/403"
          },
          "406":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: The requested mediatype is not compatible with any supported response mediatypes."
          },
          "415":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: Mediatype is not compatible with any supported request mediatypes."
          }
        },
        "tags":[
          "monitor"
        ]
      }
    },
    "/monitor/$start":{
      "post":{
        "description":"Performs the start action.",
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{
                "$ref":"#/components/schemas/line-by-line-monitor-config_input"
              }
            }
          },
          "required":true
        },
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/line-by-line-monitor-status_output"
                }
              }
            },
            "description":"A successful response"
          },
          "403":{
            "$ref":"#/components/responses/403"
          },
          "406":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: The requested mediatype is not compatible with any supported response mediatypes."
          },
          "415":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: Mediatype is not compatible with any supported request mediatypes."
          }
        },
        "tags":[
          "monitor"
        ]
      }
    },
    "/monitor/$status":{
      "get":{
        "description":"Performs the status action.",
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/line-by-line-monitor-status_output"
                }
              }
            },
            "description":"A successful response"
          },
          "403":{
            "$ref":"#/components/responses/403"
          },
          "406":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: The requested mediatype is not compatible with any supported response mediatypes."
          },
          "415":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: Mediatype is not compatible with any supported request mediatypes."
          }
        },
        "tags":[
          "monitor"
        ]
      }
    },
    "/monitor/$stop":{
      "post":{
        "description":"Performs the stop action.",
        "responses":{
          "200":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/line-by-line-monitor-status_output"
                }
              }
            },
            "description":"A successful response"
          },
          "403":{
            "$ref":"#/components/responses/403"
          },
          "406":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: The requested mediatype is not compatible with any supported response mediatypes."
          },
          "415":{
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/JSONError"
                }
              },
              "default":{
                "schema":{
                  "$ref":"#/components/schemas/TextError"
                }
              }
            },
            "description":"Unsupported Mediatype: Mediatype is not compatible with any supported request mediatypes."
          }
        },
        "tags":[
          "monitor"
        ]
      }
    }
  },
  "servers":[
    {
      "description":"/api",
      "url":"/api"
    }
  ]
}